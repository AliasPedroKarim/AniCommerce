{{ form_start(form, { 'attr': { 'class': 'needs-validation' } }) }}

{% for flashMessage in app.session.flashbag.get('captcha_error') %}
	<div class="alert alert-danger" role="alert">
		{{ flashMessage|raw }}
	</div>
{% endfor %}

{% if form_image is defined %}
	<div class="row d-flex justify-content-center mb-3">
		<div class="col-lg-4 col-md-6">
			{{ include('image/_form.html.twig', { 'form': form_image, 'multi': true, 'format': 'avatar' }) }}
		</div>
	</div>
{% endif %}

<div class="form-group">
	<div class="form-row">
		<div class="col-md-6 mb-3">
			{{ form_label(form.nom, "Nom", { }) }}
			{{ form_widget(form.nom, { 'attr': { 'class': 'form-control' ~ (form.nom.vars['errors'] |length > 0 ? ' is-invalid' : '') } }) }}

			<div class="invalid-feedback">
				{{ form_errors(form.nom) }}
			</div>
		</div>
		<div class="col-md-6 mb-3">
			{{ form_label(form.prenom, "Prenom", { }) }}
			{{ form_widget(form.prenom, { 'attr': { 'class': 'form-control' ~ ( form.prenom.vars['errors'] |length > 0 ? ' is-invalid' : '' ) } }) }}

			<div class="invalid-feedback">
				{{ form_errors(form.prenom) }}
			</div>
		</div>
	</div>

	<div class="form-row">
		<div class="col-md-4 mb-3">
			{{ form_label(form.courriel, "Email", { }) }}

			<div class="input-group">
				<div class="input-group-prepend">
					<span class="input-group-text" id="inputGroupPrependEmail">@</span>
				</div>
				{{ form_widget(form.courriel, { 'attr': { 'class': 'form-control ' ~ (form.courriel.vars['errors'] |length > 0 ? 'is-invalid' : ''), 'aria-describedby': 'inputGroupPrependEmail' } }) }}

				<div class="invalid-feedback">
					{{ form_errors(form.courriel) }}
				</div>
			</div>
		</div>
		<div class="col-md-4 mb-3">
			{{ form_label(form.telephone, "Telephone", { }) }}
			{{ form_widget(form.telephone, { 'attr': { 'class': 'form-control' ~ ( form.telephone.vars['errors'] |length > 0 ? ' is-invalid' : '' ) } }) }}

			<div class="invalid-feedback">
				{{ form_errors(form.telephone) }}
			</div>
		</div>
		<div class="col-md-4 mb-3">
			{{ form_label(form.dateNaissance, "Date de Naissance", { }) }}
			{{ form_widget(form.dateNaissance, { 'attr': { 'class': 'form-control' ~ ( form.dateNaissance.vars['errors'] |length > 0 ? ' is-invalid' : '' ) ~ ( ' ' ~ form.dateNaissance.vars['attr']['class'] ) } }) }}

			<div class="invalid-feedback">
				{{ form_errors(form.dateNaissance) }}
			</div>
		</div>
	</div>

	<div class="form-row">
		<div class="col mb-3">
			{{ form_label(form.idGenre, "Genre", { }) }}
			{{ form_widget(form.idGenre, { 'attr': { 'class': 'custom-select' ~ ( form.idGenre.vars['errors'] |length > 0 ? ' is-invalid' : '' ) } }) }}

			<div class="invalid-feedback">
				{{ form_errors(form.idGenre) }}
			</div>
		</div>
	</div>
</div>

<div class="form-group">
	<div class="row">
		<div class="col-6 mb-3">
			{{ form_label(form.motDePasse, "Mot de passe", { }) }}
			{{ form_widget(form.motDePasse, { 'attr': { 'class': 'form-control' ~ ( form.motDePasse.vars['errors'] |length > 0 ? ' is-invalid' : '' ) } }) }}

			<div class="invalid-feedback">
				{{ form_errors(form.motDePasse) is not empty ? form_errors(form.motDePasse) : "Veuillez saisir un mot de passe !" }}
			</div>
		</div>
		<div class="col-6 mb-3">
			{{ form_label(form.checkPassword, "Verification du mot de passe", { }) }}
			{{ form_widget(form.checkPassword, { 'attr': { 'class': 'form-control' ~ ( form.checkPassword.vars['errors'] |length > 0 ? ' is-invalid' : '' ) } }) }}

			<div class="invalid-feedback">
				{{ form_errors(form.checkPassword) is not empty ? form_errors(form.checkPassword) : "Veuillez saisir votre mot de passe de verification !" }}
			</div>
		</div>
	</div>
</div>

{% if action is defined and action is not empty and action|lower == 'register' %}
	<div class="form-group">
		<div class="form-check">
			<input class="form-check-input" type="checkbox" value="" id="invalidCheck3" required>
			<label class="form-check-label" for="invalidCheck3">
				Accepter les termes et conditions
			</label>
			<div class="invalid-feedback">
				You must agree before submitting.
			</div>
		</div>
	</div>
{% endif %}

<input type="hidden" name="g-recaptcha_response" id="RecaptchaUtilisateur" />

<button class="btn btn-lg btn-primary">{{ button_label|default('Enregistrer') }}</button>

{{ form_end(form) }}

<script>
    window.addEventListener('load', function() {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to

	    {% for flashMessage in app.session.flashbag.get('captcha_error') %}
            window.helpers.pingAlertTemporary(null, { elevate: true, message: "{{ flashMessage|raw }}", type: 'warning' });
	    {% endfor %}
	    {% for flashMessage in app.session.flashbag.get('success') %}
            window.helpers.pingAlertTemporary(null, { elevate: true, message: "{{ flashMessage|raw }}", type: 'success' });
	    {% endfor %}
	    {% for flashMessage in app.session.flashbag.get('danger') %}
            window.helpers.pingAlertTemporary(null, { elevate: true, message: "{{ flashMessage|raw }}", type: 'danger' });
	    {% endfor %}

        let pass = $('#utilisateur_motDePasse');
        let passCheck = $('#utilisateur_checkPassword');

        function passVerification(e) {
            if (pass.val() === "" && passCheck.val() === "") {
                return true;
            }else if (pass.val() === "" || passCheck.val() === "") {
                passCheck.removeClass("is-invalid");
                passCheck.removeClass("is-valid");
                return false;
            }

            if (pass.val() !== passCheck.val()) {
                passCheck.addClass("is-invalid");
                passCheck.removeClass("is-valid");
                return false;
            }

            passCheck.addClass("is-valid");
            passCheck.removeClass("is-invalid");
            return true;
        }

        if (pass.length > 0 && passCheck.length > 0) {
            pass.bind("change paste keyup", passVerification);
            passCheck.bind("change paste keyup", passVerification);
        }

        // Handle Image

        $('#image_cheminImage').bind("change paste keyup", function(e) {
            let url = $(e.target).val();
            if (!window.isEmpty(url) && window.helpers.isUrl(url)) {
                window.showImage(e, url, false, $('#PreviewImage'));
            }
        });

        $('#image_cheminImage').focusout(function(e) {
            if ($(e.target).val() !== "" && !window.helpers.isUrl($(e.target).val())) {
                return window.helpers.pingAlertTemporary(null, { elevate: true, message: "Oups ! Votre URL est invalide...", type: 'danger' });
            }
        });

        let forms = document.getElementsByClassName('needs-validation');
        if (forms.length > 0) {
            // Loop over them and prevent submission
            let validation = Array.prototype.filter.call(forms, function(form) {
                form.addEventListener('submit', function(event) {
                    if (form.checkValidity() === false || !passVerification(event)) {
                        form.classList.remove('was-validated');
                        event.preventDefault();
                        event.stopPropagation();
                        return
                    }

                    form.classList.add('was-validated');
                }, false);
            });
        }
    }, false);
</script>